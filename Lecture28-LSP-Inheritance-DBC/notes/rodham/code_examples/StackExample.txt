

class Stack {


	/**
	 * Inserts a new value into the stack
	 * 
	 * @param value Value being inserted
	 * 
	 * @pre !isFull()
	 * @pre value != null
	 * 
	 * @post !isEmpty()
	 * @post top() == value
	 * @post size() == old(size()) + 1
	 */
	public void push(Object value) {
		...
	}

}



////////////////////////////////////
// Subclass that violates DBC rules
////////////////////////////////////



class StrangeStack extends Stack {


	/**
	 * Inserts a new value into the stack
	 * 
	 * @param value Value being inserted
	 * 
	 * @pre !isFull()
	 * @pre value != null
	 * @pre value instanceof String
	 * @pre value.length() <= 50
	 * 
	 * @post !isEmpty()
	 * @post top() == UPPERCASE(value)
	 * @post size() == old(size()) + 1
	 */
	public void push(Object value) {
		...
	}

}




/////////////////////////////////////
// Subclass that satisfies DBC rules
/////////////////////////////////////


class MiracleStack extends Stack {


	/**
	 * Inserts a new value into the stack
	 * 
	 * @param value Value being inserted
	 * 
	 * @pre !isFull()
	 * 
	 * @post !isEmpty()
	 * @post top() == value
	 * @post size() == old(size()) + 1
	 * @post a loaf of freshly baked bread awaits you at home
	 */
	public void push(Object value) {
		...
	}

}


